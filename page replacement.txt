import java.io.*;
class FIFO
{

        public static void main(String args[]) throws IOException
        {
                
                int n;
                int f;

                float rat;
                BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
                System.out.println("Enter the number of FRAMES :");
                f=Integer.parseInt(br.readLine());
                int fifo[]=new int[f];
                System.out.println("Enter the number of INPUTS :");
                n=Integer.parseInt(br.readLine());
                int inp[]=new int[n];
                System.out.println("Enter INPUT:");
                for(int i=0;i<n;i++)
                inp[i]=Integer.parseInt(br.readLine());
                System.out.println("----------------------");
                for(int i=0;i<f;i++)
                        fifo[i]=-1;
                int Hit=0;
                int Fault=0;
                int j=0;
                boolean check;
                for(int i=0;i<n;i++)
                {
                        check=false;


                                for(int k=0;k<f;k++)
                                if(fifo[k]==inp[i])
                                {
                                        check=true;
                                        Hit=Hit+1;
                                }
                                if(check==false)
                                {
                                        fifo[j]=inp[i];
                                        j++;
                                        if(j>=f)
                                        j=0;
                                        Fault=Fault+1;
                                }

                }
                rat = (float)Hit/(float)n;
                System.out.println("HIT:"+Hit+"  FAULT:"+Fault+"   HIT RATIO:"+rat);
        }
}
/*
import java.util.ArrayList;
import java.util.Scanner;

public class LRU
{
	public static void main(String agrs[])
	{
		Scanner sn=new Scanner(System.in);
		
		System.out.print("\nEnter How Many Frames You Want :");
		int frame=sn.nextInt();
		
		System.out.print("How Many Pages You Want :");
		int pg=sn.nextInt();
		
		System.out.print("\nEnter Pages");
		int pages[]=new int[pg];
		for(int i=0;i<pg;i++)
		{
			pages[i]=sn.nextInt();
			
		}
		
		ArrayList<Integer> s=new ArrayList<>(frame);
		int count=0,pagefault=0;
		for(int i:pages)
		{
			if(!s.contains(i)) 
			{
				if(s.size()==frame)
				{
					s.remove(0);
					s.add(frame-1,i);
				}
				else
				{
					s.add(count,i);
					count++;
				}
				
				pagefault++;
				
			}else
			{
				s.remove((Object)i);
				s.add(s.size(),i);
			}
		}
		System.out.print("Page Fault :"+pagefault);
			}}

import java.util.*;
import java.io.*;

public class optimalpg {
    public static void main(String args[]) throws IOException {
    	
    	Scanner sn=new Scanner(System.in);
    	
        int numberOfFrames, numberOfPages, flag1, flag2, flag3, i, j, k, pos = 0, max,hit=0;
        int faults = 0;
        int temp[] = new int[10];

        System.out.println("Enter number of Frames: ");
        numberOfFrames = sn.nextInt();
        int frame[] = new int[numberOfFrames];

        System.out.println("Enter number of Pages: ");
        numberOfPages = sn.nextInt();

        int pages[] = new int[numberOfPages];
        System.out.println("Enter the pages: ");
        
        for (i = 0; i < numberOfPages; i++)
            pages[i] = sn.nextInt();

        for (i = 0; i < numberOfFrames; i++)
            frame[i] = -1;

        for (i = 0; i < numberOfPages; ++i) {
            flag1 = flag2 = 0;

            for (j = 0; j < numberOfFrames; ++j) {
                if (frame[j] == pages[i]) {
                    flag1 = flag2 = 1;
                    hit++;
                    break;
                }
            }

            if (flag1 == 0) {
                for (j = 0; j < numberOfFrames; ++j) {
                    if (frame[j] == -1) {
                        faults++;
                        frame[j] = pages[i];
                        flag2 = 1;
                        break;
                    }
                }
            }

            if (flag2 == 0) {
                flag3 = 0;

                for (j = 0; j < numberOfFrames; ++j) {
                    temp[j] = -1;

                    for (k = i + 1; k < numberOfPages; ++k) {
                        if (frame[j] == pages[k]) {
                            temp[j] = k;
                            break;
                        }
                    }
                }

                for (j = 0; j < numberOfFrames; ++j) {
                    if (temp[j] == -1) {
                        pos = j;
                        flag3 = 1;
                        break;
                    }
                }

                if (flag3 == 0) {
                    max = temp[0];
                    pos = 0;

                    for (j = 1; j < numberOfFrames; ++j) {
                        if (temp[j] > max) {
                            max = temp[j];
                            pos = j;
                        }
                    }
                }

                frame[pos] = pages[i];
                faults++;
            }

            // System.out.print();

//            for (j = 0; j < numberOfFrames; ++j) {
//                System.out.print("\t" + frame[j]);
//            }
        }

        System.out.println("\n\nTotal Page Faults: " + faults);
        System.out.println("\n\nTotal Page Faults: " + hit);
    }

}
